{
    "sourceFile": "pages/ProfilePage.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 20,
            "patches": [
                {
                    "date": 1686358155872,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1686358161796,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -34,9 +34,9 @@\n     async OpenRegisterPage(){\r\n      await page.click(elements.registration_Buttom)\r\n \r\n     }\r\n-//\r\n+//fun for logout\r\n     async Logout(){\r\n         await page.goto(logoutUrl); // open logout page \r\n     \r\n  //       await page.waitForNavigation({ waitUntil: 'networkidle0' });\r\n"
                },
                {
                    "date": 1686358167411,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -38,9 +38,9 @@\n //fun for logout\r\n     async Logout(){\r\n         await page.goto(logoutUrl); // open logout page \r\n     \r\n- //       await page.waitForNavigation({ waitUntil: 'networkidle0' });\r\n+ //     await page.waitForNavigation({ waitUntil: 'networkidle0' });\r\n \r\n /*\r\n  //       await page.waitForTimeout(5000)\r\n  // Replace 'selector' with the selector for your target element\r\n"
                },
                {
                    "date": 1686358173980,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -41,10 +41,10 @@\n     \r\n  //     await page.waitForNavigation({ waitUntil: 'networkidle0' });\r\n \r\n /*\r\n- //       await page.waitForTimeout(5000)\r\n- // Replace 'selector' with the selector for your target element\r\n+ //     await page.waitForTimeout(5000)\r\n+ //   Replace 'selector' with the selector for your target element\r\n         const element = await page.$(elements.logout_button);\r\n   \r\n  // Scroll to the element\r\n         await page.evaluate((el) => {\r\n"
                },
                {
                    "date": 1686358180028,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,9 +42,8 @@\n  //     await page.waitForNavigation({ waitUntil: 'networkidle0' });\r\n \r\n /*\r\n  //     await page.waitForTimeout(5000)\r\n- //   Replace 'selector' with the selector for your target element\r\n         const element = await page.$(elements.logout_button);\r\n   \r\n  // Scroll to the element\r\n         await page.evaluate((el) => {\r\n"
                },
                {
                    "date": 1686358269591,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -36,9 +36,9 @@\n \r\n     }\r\n //fun for logout\r\n     async Logout(){\r\n-        await page.goto(logoutUrl); // open logout page \r\n+  //      await page.goto(logoutUrl); // open logout page \r\n     \r\n  //     await page.waitForNavigation({ waitUntil: 'networkidle0' });\r\n \r\n /*\r\n"
                },
                {
                    "date": 1686358305540,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -36,8 +36,10 @@\n \r\n     }\r\n //fun for logout\r\n     async Logout(){\r\n+        await page.click(elements.logout_button)\r\n+\r\n   //      await page.goto(logoutUrl); // open logout page \r\n     \r\n  //     await page.waitForNavigation({ waitUntil: 'networkidle0' });\r\n \r\n"
                },
                {
                    "date": 1686358314064,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,21 +39,8 @@\n     async Logout(){\r\n         await page.click(elements.logout_button)\r\n \r\n   //      await page.goto(logoutUrl); // open logout page \r\n-    \r\n- //     await page.waitForNavigation({ waitUntil: 'networkidle0' });\r\n-\r\n-/*\r\n- //     await page.waitForTimeout(5000)\r\n-        const element = await page.$(elements.logout_button);\r\n-  \r\n- // Scroll to the element\r\n-        await page.evaluate((el) => {\r\n-        el.scrollIntoView();\r\n-        }, element);\r\n-       await page.click(elements.logout_button)\r\n-       console.log(\"logout\")\r\n-        }\r\n+ \r\n   */     \r\n \r\n     }}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1686358323768,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,44 @@\n+import BasePage from './BasePage'\r\n+import {  logoutUrl } from '../config'\r\n+\r\n+const elements ={\r\n+    lgoin_Buttom:'.headerElement__icon--login',\r\n+    loginEmail_TxtBox:  '#loginEmail' ,\r\n+    loginPass_TxtBox:  '#loginPassword' ,\r\n+    submit_TxtBox:  '#login-submit' ,\r\n+    error_Txt:  '#loginEmail-error' ,\r\n+    registration_Buttom:'button#registerAccount',\r\n+    welcome_TXT:'.titleHeadline',\r\n+    logout_button:  '.sidebarNavigation__rootChild' \r\n+ }\r\n+\r\n+export default class ProfilePage extends BasePage {\r\n+\r\n+    async isLoginPageDisplayed(){\r\n+        await page.waitForSelector(elements.loginEmail_TxtBox)     \r\n+    }\r\n+\r\n+    async EnterCredinial(email,password){\r\n+   // await page.click(elements.lgoin_Buttom) ;\r\n+       await page.$eval(elements.loginEmail_TxtBox, input => input.value = ''); // Clear the text from the field\r\n+       await page.type(elements.loginEmail_TxtBox,email)\r\n+       await page.type(elements.loginPass_TxtBox,password)\r\n+       await page.click(elements.submit_TxtBox)\r\n+    }\r\n+    async isInvalidloginError(){\r\n+        await page.waitForSelector(elements.error_Txt)\r\n+        expect(elements.error_Txt).not.toBeNull();\r\n+\r\n+    }\r\n+    \r\n+    async OpenRegisterPage(){\r\n+     await page.click(elements.registration_Buttom)\r\n+\r\n+    }\r\n+//fun for logout\r\n+    async Logout(){\r\n+        await page.click(elements.logout_button)\r\n+\r\n+  //      await page.goto(logoutUrl); // open logout page      \r\n+\r\n+    }}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1686358397403,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -36,55 +36,10 @@\n \r\n     }\r\n //fun for logout\r\n     async Logout(){\r\n+      \r\n         await page.click(elements.logout_button)\r\n \r\n   //      await page.goto(logoutUrl); // open logout page      \r\n \r\n-    }}\n-import BasePage from './BasePage'\r\n-import {  logoutUrl } from '../config'\r\n-\r\n-const elements ={\r\n-    lgoin_Buttom:'.headerElement__icon--login',\r\n-    loginEmail_TxtBox:  '#loginEmail' ,\r\n-    loginPass_TxtBox:  '#loginPassword' ,\r\n-    submit_TxtBox:  '#login-submit' ,\r\n-    error_Txt:  '#loginEmail-error' ,\r\n-    registration_Buttom:'button#registerAccount',\r\n-    welcome_TXT:'.titleHeadline',\r\n-    logout_button:  '.sidebarNavigation__rootChild' \r\n- }\r\n-\r\n-export default class ProfilePage extends BasePage {\r\n-\r\n-    async isLoginPageDisplayed(){\r\n-        await page.waitForSelector(elements.loginEmail_TxtBox)     \r\n-    }\r\n-\r\n-    async EnterCredinial(email,password){\r\n-   // await page.click(elements.lgoin_Buttom) ;\r\n-       await page.$eval(elements.loginEmail_TxtBox, input => input.value = ''); // Clear the text from the field\r\n-       await page.type(elements.loginEmail_TxtBox,email)\r\n-       await page.type(elements.loginPass_TxtBox,password)\r\n-       await page.click(elements.submit_TxtBox)\r\n-    }\r\n-    async isInvalidloginError(){\r\n-        await page.waitForSelector(elements.error_Txt)\r\n-        expect(elements.error_Txt).not.toBeNull();\r\n-\r\n-    }\r\n-    \r\n-    async OpenRegisterPage(){\r\n-     await page.click(elements.registration_Buttom)\r\n-\r\n-    }\r\n-//fun for logout\r\n-    async Logout(){\r\n-        await page.click(elements.logout_button)\r\n-\r\n-  //      await page.goto(logoutUrl); // open logout page \r\n- \r\n-  */     \r\n-\r\n     }}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1686358407340,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -36,9 +36,11 @@\n \r\n     }\r\n //fun for logout\r\n     async Logout(){\r\n-      \r\n+     // Scroll down the page by the height of the viewport\r\n+    await page.evaluate(() => {\r\n+    window.scrollBy(0, window.innerHeight);\r\n         await page.click(elements.logout_button)\r\n \r\n   //      await page.goto(logoutUrl); // open logout page      \r\n \r\n"
                },
                {
                    "date": 1686358412872,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -37,10 +37,10 @@\n     }\r\n //fun for logout\r\n     async Logout(){\r\n      // Scroll down the page by the height of the viewport\r\n-    await page.evaluate(() => {\r\n-    window.scrollBy(0, window.innerHeight);\r\n+        await page.evaluate(() => {\r\n+        window.scrollBy(0, window.innerHeight);\r\n         await page.click(elements.logout_button)\r\n \r\n   //      await page.goto(logoutUrl); // open logout page      \r\n \r\n"
                },
                {
                    "date": 1686358420125,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,8 +39,9 @@\n     async Logout(){\r\n      // Scroll down the page by the height of the viewport\r\n         await page.evaluate(() => {\r\n         window.scrollBy(0, window.innerHeight);\r\n+        )\r\n         await page.click(elements.logout_button)\r\n \r\n   //      await page.goto(logoutUrl); // open logout page      \r\n \r\n"
                },
                {
                    "date": 1686358512463,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,48 @@\n+import BasePage from './BasePage'\r\n+import {  logoutUrl } from '../config'\r\n+\r\n+const elements ={\r\n+    lgoin_Buttom:'.headerElement__icon--login',\r\n+    loginEmail_TxtBox:  '#loginEmail' ,\r\n+    loginPass_TxtBox:  '#loginPassword' ,\r\n+    submit_TxtBox:  '#login-submit' ,\r\n+    error_Txt:  '#loginEmail-error' ,\r\n+    registration_Buttom:'button#registerAccount',\r\n+    welcome_TXT:'.titleHeadline',\r\n+    logout_button:  '.sidebarNavigation__rootChild' \r\n+ }\r\n+\r\n+export default class ProfilePage extends BasePage {\r\n+\r\n+    async isLoginPageDisplayed(){\r\n+        await page.waitForSelector(elements.loginEmail_TxtBox)     \r\n+    }\r\n+\r\n+    async EnterCredinial(email,password){\r\n+   // await page.click(elements.lgoin_Buttom) ;\r\n+       await page.$eval(elements.loginEmail_TxtBox, input => input.value = ''); // Clear the text from the field\r\n+       await page.type(elements.loginEmail_TxtBox,email)\r\n+       await page.type(elements.loginPass_TxtBox,password)\r\n+       await page.click(elements.submit_TxtBox)\r\n+    }\r\n+    async isInvalidloginError(){\r\n+        await page.waitForSelector(elements.error_Txt)\r\n+        expect(elements.error_Txt).not.toBeNull();\r\n+\r\n+    }\r\n+    \r\n+    async OpenRegisterPage(){\r\n+     await page.click(elements.registration_Buttom)\r\n+\r\n+    }\r\n+//fun for logout\r\n+    async Logout(){\r\n+     // Scroll down the page by the height of the viewport\r\n+        await page.evaluate(() => {\r\n+        window.scrollBy(0, window.innerHeight);\r\n+    })\r\n+        await page.click(elements.logout_button)\r\n+\r\n+        await page.goto(logoutUrl); // open logout page      \r\n+\r\n+    }}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1686358518403,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -41,56 +41,8 @@\n         await page.evaluate(() => {\r\n         window.scrollBy(0, window.innerHeight);\r\n     })\r\n         await page.click(elements.logout_button)\r\n-\r\n+*/\r\n         await page.goto(logoutUrl); // open logout page      \r\n \r\n-    }}\n-import BasePage from './BasePage'\r\n-import {  logoutUrl } from '../config'\r\n-\r\n-const elements ={\r\n-    lgoin_Buttom:'.headerElement__icon--login',\r\n-    loginEmail_TxtBox:  '#loginEmail' ,\r\n-    loginPass_TxtBox:  '#loginPassword' ,\r\n-    submit_TxtBox:  '#login-submit' ,\r\n-    error_Txt:  '#loginEmail-error' ,\r\n-    registration_Buttom:'button#registerAccount',\r\n-    welcome_TXT:'.titleHeadline',\r\n-    logout_button:  '.sidebarNavigation__rootChild' \r\n- }\r\n-\r\n-export default class ProfilePage extends BasePage {\r\n-\r\n-    async isLoginPageDisplayed(){\r\n-        await page.waitForSelector(elements.loginEmail_TxtBox)     \r\n-    }\r\n-\r\n-    async EnterCredinial(email,password){\r\n-   // await page.click(elements.lgoin_Buttom) ;\r\n-       await page.$eval(elements.loginEmail_TxtBox, input => input.value = ''); // Clear the text from the field\r\n-       await page.type(elements.loginEmail_TxtBox,email)\r\n-       await page.type(elements.loginPass_TxtBox,password)\r\n-       await page.click(elements.submit_TxtBox)\r\n-    }\r\n-    async isInvalidloginError(){\r\n-        await page.waitForSelector(elements.error_Txt)\r\n-        expect(elements.error_Txt).not.toBeNull();\r\n-\r\n-    }\r\n-    \r\n-    async OpenRegisterPage(){\r\n-     await page.click(elements.registration_Buttom)\r\n-\r\n-    }\r\n-//fun for logout\r\n-    async Logout(){\r\n-     // Scroll down the page by the height of the viewport\r\n-        await page.evaluate(() => {\r\n-        window.scrollBy(0, window.innerHeight);\r\n-        )\r\n-        await page.click(elements.logout_button)\r\n-\r\n-  //      await page.goto(logoutUrl); // open logout page      \r\n-\r\n     }}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1686358527025,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -36,8 +36,9 @@\n \r\n     }\r\n //fun for logout\r\n     async Logout(){\r\n+/*        \r\n      // Scroll down the page by the height of the viewport\r\n         await page.evaluate(() => {\r\n         window.scrollBy(0, window.innerHeight);\r\n     })\r\n"
                },
                {
                    "date": 1686358711579,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -34,8 +34,14 @@\n     async OpenRegisterPage(){\r\n      await page.click(elements.registration_Buttom)\r\n \r\n     }\r\n+        //fun open registration page\r\n+        async openRegisterPage(){\r\n+            await page.waitForSelector(elements.registration_Buttom)    \r\n+    //      await page.goto(' https://www.moebel-kraft.de/registrierung') // open registration through the url\r\n+            await page.click(elements.registration_Buttom)  //open registration by click on registration buttion - sometimes not working\r\n+        }\r\n //fun for logout\r\n     async Logout(){\r\n /*        \r\n      // Scroll down the page by the height of the viewport\r\n"
                },
                {
                    "date": 1686358717790,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -34,14 +34,9 @@\n     async OpenRegisterPage(){\r\n      await page.click(elements.registration_Buttom)\r\n \r\n     }\r\n-        //fun open registration page\r\n-        async openRegisterPage(){\r\n-            await page.waitForSelector(elements.registration_Buttom)    \r\n-    //      await page.goto(' https://www.moebel-kraft.de/registrierung') // open registration through the url\r\n-            await page.click(elements.registration_Buttom)  //open registration by click on registration buttion - sometimes not working\r\n-        }\r\n+    \r\n //fun for logout\r\n     async Logout(){\r\n /*        \r\n      // Scroll down the page by the height of the viewport\r\n"
                },
                {
                    "date": 1686358728354,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -34,10 +34,15 @@\n     async OpenRegisterPage(){\r\n      await page.click(elements.registration_Buttom)\r\n \r\n     }\r\n-    \r\n-//fun for logout\r\n+    //fun open registration page\r\n+    async openRegisterPage(){\r\n+        await page.waitForSelector(elements.registration_Buttom)    \r\n+//      await page.goto(' https://www.moebel-kraft.de/registrierung') // open registration through the url\r\n+        await page.click(elements.registration_Buttom)  //open registration by click on registration buttion - sometimes not working\r\n+    }    \r\n+    //fun for logout\r\n     async Logout(){\r\n /*        \r\n      // Scroll down the page by the height of the viewport\r\n         await page.evaluate(() => {\r\n"
                },
                {
                    "date": 1686358735593,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -37,9 +37,9 @@\n     }\r\n     //fun open registration page\r\n     async openRegisterPage(){\r\n         await page.waitForSelector(elements.registration_Buttom)    \r\n-//      await page.goto(' https://www.moebel-kraft.de/registrierung') // open registration through the url\r\n+      await page.goto(' https://www.moebel-kraft.de/registrierung') // open registration through the url\r\n         await page.click(elements.registration_Buttom)  //open registration by click on registration buttion - sometimes not working\r\n     }    \r\n     //fun for logout\r\n     async Logout(){\r\n"
                },
                {
                    "date": 1686358741659,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -37,10 +37,10 @@\n     }\r\n     //fun open registration page\r\n     async openRegisterPage(){\r\n         await page.waitForSelector(elements.registration_Buttom)    \r\n-      await page.goto(' https://www.moebel-kraft.de/registrierung') // open registration through the url\r\n-        await page.click(elements.registration_Buttom)  //open registration by click on registration buttion - sometimes not working\r\n+        await page.goto(' https://www.moebel-kraft.de/registrierung') // open registration through the url\r\n+     await page.click(elements.registration_Buttom)  //open registration by click on registration buttion - sometimes not working\r\n     }    \r\n     //fun for logout\r\n     async Logout(){\r\n /*        \r\n"
                }
            ],
            "date": 1686358155872,
            "name": "Commit-0",
            "content": "import BasePage from './BasePage'\r\nimport {  logoutUrl } from '../config'\r\n\r\nconst elements ={\r\n    lgoin_Buttom:'.headerElement__icon--login',\r\n    loginEmail_TxtBox:  '#loginEmail' ,\r\n    loginPass_TxtBox:  '#loginPassword' ,\r\n    submit_TxtBox:  '#login-submit' ,\r\n    error_Txt:  '#loginEmail-error' ,\r\n    registration_Buttom:'button#registerAccount',\r\n    welcome_TXT:'.titleHeadline',\r\n    logout_button:  '.sidebarNavigation__rootChild' \r\n }\r\n\r\nexport default class ProfilePage extends BasePage {\r\n\r\n    async isLoginPageDisplayed(){\r\n        await page.waitForSelector(elements.loginEmail_TxtBox)     \r\n    }\r\n\r\n    async EnterCredinial(email,password){\r\n   // await page.click(elements.lgoin_Buttom) ;\r\n       await page.$eval(elements.loginEmail_TxtBox, input => input.value = ''); // Clear the text from the field\r\n       await page.type(elements.loginEmail_TxtBox,email)\r\n       await page.type(elements.loginPass_TxtBox,password)\r\n       await page.click(elements.submit_TxtBox)\r\n    }\r\n    async isInvalidloginError(){\r\n        await page.waitForSelector(elements.error_Txt)\r\n        expect(elements.error_Txt).not.toBeNull();\r\n\r\n    }\r\n    \r\n    async OpenRegisterPage(){\r\n     await page.click(elements.registration_Buttom)\r\n\r\n    }\r\n//\r\n    async Logout(){\r\n        await page.goto(logoutUrl); // open logout page \r\n    \r\n //       await page.waitForNavigation({ waitUntil: 'networkidle0' });\r\n\r\n/*\r\n //       await page.waitForTimeout(5000)\r\n // Replace 'selector' with the selector for your target element\r\n        const element = await page.$(elements.logout_button);\r\n  \r\n // Scroll to the element\r\n        await page.evaluate((el) => {\r\n        el.scrollIntoView();\r\n        }, element);\r\n       await page.click(elements.logout_button)\r\n       console.log(\"logout\")\r\n        }\r\n  */     \r\n\r\n    }}"
        }
    ]
}