{
    "sourceFile": "pages/CartPag.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 13,
            "patches": [
                {
                    "date": 1687568517965,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1687568525324,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,10 +1,8 @@\n import { randamnum,convertTextToNumber } from '../config';\r\n import Base from './Base';\r\n \r\n-let totalprice = 0;\r\n-let Items = [];\r\n-let selected = [];\r\n+\r\n // Category Page Locators\r\n const elements = {\r\n   regcatigories: 'a.link-roompages',\r\n   ItemName1: 'span.articleFullName__specification:nth-child(1)',\r\n"
                },
                {
                    "date": 1687568815114,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,9 @@\n \r\n \r\n // Category Page Locators\r\n const elements = {\r\n-  regcatigories: 'a.link-roompages',\r\n+  regcatigories: 'div.cartOverview__summaryContainer:nth-child(1) > div:nth-child(1) > div:nth-child(1) > div:nth-child(4) > div:nth-child(1) > div:nth-child(1) > div:nth-child(2) > div:nth-child(1) > div:nth-child(1)',\r\n   ItemName1: 'span.articleFullName__specification:nth-child(1)',\r\n   ItemName2: 'span.articleFullName__name:nth-child(2)',\r\n   wishlist: '.headerElement__icon--wishlist',\r\n   addtoCart: '.addToCart__buttonContainer--noLogistic > .button',\r\n"
                },
                {
                    "date": 1687568856579,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,9 +4,9 @@\n \r\n // Category Page Locators\r\n const elements = {\r\n   regcatigories: 'div.cartOverview__summaryContainer:nth-child(1) > div:nth-child(1) > div:nth-child(1) > div:nth-child(4) > div:nth-child(1) > div:nth-child(1) > div:nth-child(2) > div:nth-child(1) > div:nth-child(1)',\r\n-  ItemName1: 'span.articleFullName__specification:nth-child(1)',\r\n+  ItemName1: 'div.cartOverview__summaryContainer:nth-child(1) > div:nth-child(1) > div:nth-child(1) > div:nth-child(4) > div:nth-child(1) > div:nth-child(1) > div:nth-child(2) > div:nth-child(1) > div:nth-child(3)',\r\n   ItemName2: 'span.articleFullName__name:nth-child(2)',\r\n   wishlist: '.headerElement__icon--wishlist',\r\n   addtoCart: '.addToCart__buttonContainer--noLogistic > .button',\r\n \r\n"
                },
                {
                    "date": 1687568862891,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,15 +5,9 @@\n // Category Page Locators\r\n const elements = {\r\n   regcatigories: 'div.cartOverview__summaryContainer:nth-child(1) > div:nth-child(1) > div:nth-child(1) > div:nth-child(4) > div:nth-child(1) > div:nth-child(1) > div:nth-child(2) > div:nth-child(1) > div:nth-child(1)',\r\n   ItemName1: 'div.cartOverview__summaryContainer:nth-child(1) > div:nth-child(1) > div:nth-child(1) > div:nth-child(4) > div:nth-child(1) > div:nth-child(1) > div:nth-child(2) > div:nth-child(1) > div:nth-child(3)',\r\n-  ItemName2: 'span.articleFullName__name:nth-child(2)',\r\n-  wishlist: '.headerElement__icon--wishlist',\r\n-  addtoCart: '.addToCart__buttonContainer--noLogistic > .button',\r\n \r\n-  price: '.priceNew--row',\r\n-  itemFav: 'div.wishlistIcon:nth-child(1)',\r\n-  prudectselment: \"a[href*='/artikel/']\",\r\n };\r\n \r\n export default class CatPage extends Base {\r\n   //Fun select randam category\r\n"
                },
                {
                    "date": 1687568873090,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,10 +3,10 @@\n \r\n \r\n // Category Page Locators\r\n const elements = {\r\n-  regcatigories: 'div.cartOverview__summaryContainer:nth-child(1) > div:nth-child(1) > div:nth-child(1) > div:nth-child(4) > div:nth-child(1) > div:nth-child(1) > div:nth-child(2) > div:nth-child(1) > div:nth-child(1)',\r\n-  ItemName1: 'div.cartOverview__summaryContainer:nth-child(1) > div:nth-child(1) > div:nth-child(1) > div:nth-child(4) > div:nth-child(1) > div:nth-child(1) > div:nth-child(2) > div:nth-child(1) > div:nth-child(3)',\r\n+  integer: 'div.cartOverview__summaryContainer:nth-child(1) > div:nth-child(1) > div:nth-child(1) > div:nth-child(4) > div:nth-child(1) > div:nth-child(1) > div:nth-child(2) > div:nth-child(1) > div:nth-child(1)',\r\n+  fraction: 'div.cartOverview__summaryContainer:nth-child(1) > div:nth-child(1) > div:nth-child(1) > div:nth-child(4) > div:nth-child(1) > div:nth-child(1) > div:nth-child(2) > div:nth-child(1) > div:nth-child(3)',\r\n \r\n };\r\n \r\n export default class CatPage extends Base {\r\n"
                },
                {
                    "date": 1687568883709,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,9 +10,9 @@\n };\r\n \r\n export default class CatPage extends Base {\r\n   //Fun select randam category\r\n-  async selectRandamCat() {\r\n+  async G() {\r\n     const e = await page.$$(elements.regcatigories); //get array of categories webelements\r\n     const rand = randamnum(30); //get randam number\r\n     console.log('randam cataloge ' + rand); // display the randam number\r\n     await e[rand].click(); // open randam category\r\n"
                },
                {
                    "date": 1687568890751,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,9 +10,9 @@\n };\r\n \r\n export default class CatPage extends Base {\r\n   //Fun select randam category\r\n-  async G() {\r\n+  async GetExpected() {\r\n     const e = await page.$$(elements.regcatigories); //get array of categories webelements\r\n     const rand = randamnum(30); //get randam number\r\n     console.log('randam cataloge ' + rand); // display the randam number\r\n     await e[rand].click(); // open randam category\r\n"
                },
                {
                    "date": 1687568922434,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,65 +10,13 @@\n };\r\n \r\n export default class CatPage extends Base {\r\n   //Fun select randam category\r\n-  async GetExpected() {\r\n+  async GetExpectedPrice() {\r\n     const e = await page.$$(elements.regcatigories); //get array of categories webelements\r\n     const rand = randamnum(30); //get randam number\r\n     console.log('randam cataloge ' + rand); // display the randam number\r\n     await e[rand].click(); // open randam category\r\n   }\r\n \r\n-  //Fun select randam Item\r\n-  async selectRandamItem() {\r\n-      // Wait for page to be loaded\r\n-      await this.waitloadPage();\r\n-    //loop 5 times\r\n-    for (let i = 0; i < 1; i++) {\r\n-      await this.wait(5000);\r\n-      // await page.waitForNavigation({ waitUntil: 'networkidle0' });\r\n-      const products = await page.$$(\"a[href*='/artikel/']\"); //get all items in array of web of elements\r\n-      const rand = randamnum(products.length); //get randam item\r\n-      selected.push(rand);\r\n-\r\n-      //remove added tp fav item from list of products\r\n-      if (i > 0) {\r\n-        for (let j = 0; j < selected.length; j++) {\r\n-          products.splice(selected[j], 1); //remove rand item from list of elemnts\r\n-        }\r\n-      }\r\n-      console.log('Randam item number : ' + rand); // display rand item number\r\n-\r\n-      await products[rand].click(); // open rand item\r\n-//      await page.waitForSelector(elements.itemFav); // wait\r\n-      await this.wait(5000);\r\n-\r\n-    //  await page.click(elements.itemFav); //add to wish list\r\n-       // Find the element that you want to scroll to\r\n-\r\n-     // this.scrollDown();\r\n-      await page.click('button[data-testid=\"addToCartButton\"]'); //add to cart\r\n-\r\n-      //   const name2Element = await page.$(elements.ItemName2); //name2 element\r\n-\r\n-      const price = await this.getText(page, elements.price); // get item price in text\r\n-      const itemName1Text = await this.getText(page, elements.ItemName1); // get item name1 in text\r\n-\r\n-      //    const itemName2Text = await page.evaluate(name2Element => name2Element.textContent, name2Element);// get item name1 in text\r\n-\r\n-      const ItemName = itemName1Text; //+\" \"+ itemName2Text\r\n-      console.log('Item : ' + ItemName + ' - price : ' + price); //display the price\r\n-      totalprice = totalprice + convertTextToNumber(price);\r\n-      Items.push(ItemName); // add the ItemName to the Items array\r\n-\r\n-      await page.goBack();\r\n-    }\r\n-    console.log('Items: ' + Items);\r\n-\r\n-    console.log('Total Expected Price : ' + totalprice);\r\n-\r\n-  }\r\n-  // get expected total price\r\n-  totalprice() {\r\n-    return totalprice;\r\n-  }\r\n+ \r\n }\r\n"
                },
                {
                    "date": 1687568932358,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,12 +11,10 @@\n \r\n export default class CatPage extends Base {\r\n   //Fun select randam category\r\n   async GetExpectedPrice() {\r\n-    const e = await page.$$(elements.regcatigories); //get array of categories webelements\r\n-    const rand = randamnum(30); //get randam number\r\n-    console.log('randam cataloge ' + rand); // display the randam number\r\n-    await e[rand].click(); // open randam category\r\n+    const Exprice = await this.getText(page, elements.price); // get item price in text\r\n+\r\n   }\r\n \r\n  \r\n }\r\n"
                },
                {
                    "date": 1687568938550,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,9 +11,9 @@\n \r\n export default class CatPage extends Base {\r\n   //Fun select randam category\r\n   async GetExpectedPrice() {\r\n-    const Exprice = await this.getText(page, elements.price); // get item price in text\r\n+    const Exprice = await this.getText(page, elements.integer); // get item price in text\r\n \r\n   }\r\n \r\n  \r\n"
                },
                {
                    "date": 1687568947416,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,8 +12,9 @@\n export default class CatPage extends Base {\r\n   //Fun select randam category\r\n   async GetExpectedPrice() {\r\n     const Exprice = await this.getText(page, elements.integer); // get item price in text\r\n+    const Exprice = await this.getText(page, elements.fraction); // get item price in text\r\n \r\n   }\r\n \r\n  \r\n"
                },
                {
                    "date": 1687568953576,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,9 +12,9 @@\n export default class CatPage extends Base {\r\n   //Fun select randam category\r\n   async GetExpectedPrice() {\r\n     const Exprice1 = await this.getText(page, elements.integer); // get item price in text\r\n-    const Exprice = await this.getText(page, elements.fraction); // get item price in text\r\n+    const Exprice2 = await this.getText(page, elements.fraction); // get item price in text\r\n \r\n   }\r\n \r\n  \r\n"
                },
                {
                    "date": 1687570565776,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,24 @@\n+import { convertTextToNumber,CartUrl } from '../config';\r\n+import Base from './Base';\r\n+\r\n+\r\n+// Category Page Locators\r\n+const elements = {\r\n+  integer: 'div.cartOverview__summaryContainer:nth-child(1) > div:nth-child(1) > div:nth-child(1) > div:nth-child(4) > div:nth-child(1) > div:nth-child(1) > div:nth-child(2) > div:nth-child(1) > div:nth-child(1)',\r\n+  fraction: 'div.cartOverview__summaryContainer:nth-child(1) > div:nth-child(1) > div:nth-child(1) > div:nth-child(4) > div:nth-child(1) > div:nth-child(1) > div:nth-child(2) > div:nth-child(1) > div:nth-child(3)',\r\n+\r\n+};\r\n+\r\n+export default class CartPage extends Base {\r\n+  //Fun select randam category\r\n+  async GetExpectedPrice() {\r\n+    const Exprice1 = await this.getText(page, elements.integer); // get  price in text\r\n+    const Exprice2 = await this.getText(page, elements.fraction); // get .00 price in text\r\n+    const Exprice3 =Exprice1+ Exprice2; // get total price in text\r\n+    const Exprice4 =convertTextToNumber(Exprice3);\r\n+    console.log('Total: ' + Exprice4);\r\n+\r\n+  }\r\n+\r\n+ \r\n+}\r\n"
                }
            ],
            "date": 1687568517965,
            "name": "Commit-0",
            "content": "import { randamnum,convertTextToNumber } from '../config';\r\nimport Base from './Base';\r\n\r\nlet totalprice = 0;\r\nlet Items = [];\r\nlet selected = [];\r\n// Category Page Locators\r\nconst elements = {\r\n  regcatigories: 'a.link-roompages',\r\n  ItemName1: 'span.articleFullName__specification:nth-child(1)',\r\n  ItemName2: 'span.articleFullName__name:nth-child(2)',\r\n  wishlist: '.headerElement__icon--wishlist',\r\n  addtoCart: '.addToCart__buttonContainer--noLogistic > .button',\r\n\r\n  price: '.priceNew--row',\r\n  itemFav: 'div.wishlistIcon:nth-child(1)',\r\n  prudectselment: \"a[href*='/artikel/']\",\r\n};\r\n\r\nexport default class CatPage extends Base {\r\n  //Fun select randam category\r\n  async selectRandamCat() {\r\n    const e = await page.$$(elements.regcatigories); //get array of categories webelements\r\n    const rand = randamnum(30); //get randam number\r\n    console.log('randam cataloge ' + rand); // display the randam number\r\n    await e[rand].click(); // open randam category\r\n  }\r\n\r\n  //Fun select randam Item\r\n  async selectRandamItem() {\r\n      // Wait for page to be loaded\r\n      await this.waitloadPage();\r\n    //loop 5 times\r\n    for (let i = 0; i < 1; i++) {\r\n      await this.wait(5000);\r\n      // await page.waitForNavigation({ waitUntil: 'networkidle0' });\r\n      const products = await page.$$(\"a[href*='/artikel/']\"); //get all items in array of web of elements\r\n      const rand = randamnum(products.length); //get randam item\r\n      selected.push(rand);\r\n\r\n      //remove added tp fav item from list of products\r\n      if (i > 0) {\r\n        for (let j = 0; j < selected.length; j++) {\r\n          products.splice(selected[j], 1); //remove rand item from list of elemnts\r\n        }\r\n      }\r\n      console.log('Randam item number : ' + rand); // display rand item number\r\n\r\n      await products[rand].click(); // open rand item\r\n//      await page.waitForSelector(elements.itemFav); // wait\r\n      await this.wait(5000);\r\n\r\n    //  await page.click(elements.itemFav); //add to wish list\r\n       // Find the element that you want to scroll to\r\n\r\n     // this.scrollDown();\r\n      await page.click('button[data-testid=\"addToCartButton\"]'); //add to cart\r\n\r\n      //   const name2Element = await page.$(elements.ItemName2); //name2 element\r\n\r\n      const price = await this.getText(page, elements.price); // get item price in text\r\n      const itemName1Text = await this.getText(page, elements.ItemName1); // get item name1 in text\r\n\r\n      //    const itemName2Text = await page.evaluate(name2Element => name2Element.textContent, name2Element);// get item name1 in text\r\n\r\n      const ItemName = itemName1Text; //+\" \"+ itemName2Text\r\n      console.log('Item : ' + ItemName + ' - price : ' + price); //display the price\r\n      totalprice = totalprice + convertTextToNumber(price);\r\n      Items.push(ItemName); // add the ItemName to the Items array\r\n\r\n      await page.goBack();\r\n    }\r\n    console.log('Items: ' + Items);\r\n\r\n    console.log('Total Expected Price : ' + totalprice);\r\n\r\n  }\r\n  // get expected total price\r\n  totalprice() {\r\n    return totalprice;\r\n  }\r\n}\r\n"
        }
    ]
}